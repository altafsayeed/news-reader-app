{"version":3,"sources":["components/NewsCards/styles.js","components/NewsCard/NewsCard.js","components/NewsCards/NewsCards.js","App.js","index.js"],"names":["makeStyles","container","padding","width","margin","NewsCard","article","description","publishedAt","source","title","urlToImage","url","i","Card","CardActionArea","CardMedia","image","Typography","variant","color","component","Date","toDateString","name","gutterBottom","CardContent","CardActions","Button","size","NewsCards","articles","classes","useStyles","Grow","in","Grid","className","alignItems","spacing","map","item","xs","sm","md","lg","style","display","App","useState","newsArticles","setNewsArticles","useEffect","alanBtn","key","onCommand","command","ReactDOM","render","document","getElementById"],"mappings":"qOAEeA,cAAW,CACxBC,UAAW,CACTC,QAAS,OACTC,MAAO,OACPC,OAAQ,K,+DC+CGC,EA1CE,SAAC,GAGX,IAAD,IAFJC,QAAWC,EAEP,EAFOA,YAAaC,EAEpB,EAFoBA,YAAaC,EAEjC,EAFiCA,OAAQC,EAEzC,EAFyCA,MAAYC,GAErD,EAFgDC,IAEhD,EAFqDD,YACzDE,EACI,EADJA,EAEA,OACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MACEN,GACA,gHAGJ,gCACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACG,IAAIC,KAAKd,GAAae,iBAEzB,cAACL,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,SACGZ,EAAOe,UAGZ,cAACN,EAAA,EAAD,CAAYO,cAAY,EAACN,QAAQ,KAAjC,SACGT,IAEH,cAACgB,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACGd,SAIP,eAACoB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQT,MAAM,UAA3B,wBAGA,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,gBAA/B,SACGP,EAAI,WCnBAiB,EArBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAUC,IAEhB,OACE,cAACC,EAAA,EAAD,CAAMC,IAAE,EAAR,SACE,cAACC,EAAA,EAAD,CACEC,UAAWL,EAAQ/B,UACnBA,WAAS,EACTqC,WAAW,UACXC,QAAS,EAJX,SAMGR,EAASS,KAAI,SAAClC,EAASO,GAAV,OACZ,cAACuB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,MAAO,CAAEC,QAAS,QAA1D,SACE,cAAC,EAAD,CAAUzC,QAASA,EAASO,EAAGA,cCW5BmC,EAtBH,WAAO,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,KAchB,OAXAC,qBAAU,WACRC,IAAQ,CACNC,IAPJ,yEAQIC,UAAW,YAA4B,IAAzBC,EAAwB,EAAxBA,QAASzB,EAAe,EAAfA,SACL,iBAAZyB,GACFL,EAAgBpB,QAIrB,IAGD,gCACE,8CACA,cAAC,EAAD,CAAWA,SAAUmB,QClB3BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0a3a094f.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  container: {\r\n    padding: \"0 5%\",\r\n    width: \"100%\",\r\n    margin: 0,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst NewsCard = ({\r\n  article: { description, publishedAt, source, title, url, urlToImage },\r\n  i,\r\n}) => {\r\n  return (\r\n    <Card>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          image={\r\n            urlToImage ||\r\n            \"https://www.electrocore.com/wp-content/uploads/2017/12/article_generic_1440x634px-e1515567133169no-news.jpg\"\r\n          }\r\n        />\r\n        <div>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n            {new Date(publishedAt).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n            {source.name}\r\n          </Typography>\r\n        </div>\r\n        <Typography gutterBottom variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n        <Typography variant=\"h5\" color=\"textSecondary\">\r\n          {i + 1}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewsCard;\r\n","import React from \"react\";\r\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"./styles.js\";\r\nimport NewsCard from \"../NewsCard/NewsCard\";\r\n\r\nconst NewsCards = ({ articles }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grow in>\r\n      <Grid\r\n        className={classes.container}\r\n        container\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n      >\r\n        {articles.map((article, i) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: \"flex\" }}>\r\n            <NewsCard article={article} i={i} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default NewsCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\n\r\nimport NewsCards from \"./components/NewsCards/NewsCards\";\r\n\r\nconst alanKey =\r\n  \"056fc4b07f72ea122fb680ae426c27ad2e956eca572e1d8b807a3e2338fdd0dc/stage\";\r\n\r\nconst App = () => {\r\n  const [newsArticles, setNewsArticles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    alanBtn({\r\n      key: alanKey,\r\n      onCommand: ({ command, articles }) => {\r\n        if (command === \"newHeadlines\") {\r\n          setNewsArticles(articles);\r\n        }\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Alan AI News</h1>\r\n      <NewsCards articles={newsArticles} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}